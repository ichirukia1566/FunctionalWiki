// base class for all texts
@class Text {
}

@class InlineText : Text {
}

@class PlainText : InlineText {
    @var content : [@Character];
}

@class StrongText : InlineText {
    @var content : InlineText;
}

@var strong(content : InlineText) = StrongText {content = content};

@class EmphasisedText : InlineText {
    @var content : InlineText;
}
@var emphasis(content : InlineText) = EmphasisedText {content = content};

// A CSS Style
@class Style {
    @var property : [@Character];
    @var value : [@Character];
}

@var style(prop : [@Character], val : [@Character])
    = Style {property = prop; value = val};

@class StyledText : InlineText {
    // CSS Styles applicable to the text
    @var styles : [Style];
    @var content : InlineText;
}

@var apply_style(styles : [Style], content : InlineText)
    = StyledText {styles = styles; content = content};

@class TableCell : Text {
    @var colspan : @Integer = 1;
    @var rowspan : @Integer = 1;
    @var content : Text;
}

@var cell(content : Text) = TableCell {content = content};

@class Table : Text {
    @var cells : [[TableCell]];
}

@var table(cells : [[TableCell]]) = Table {cells = cells};

@class Heading : Text {
    @var level : @Integer;
    @var content : InlineText;
}

@var heading(level : @Integer, content : InlineText)
    = Heading {level = level; content = content};

@class TextSequence : Text {
    @var content : [Text];
}

@var text(x : [@Character]) = PlainText {content = x};
@var text(x : @Integer) = text (string x);
@var text(x : @Float) = text (string x);
@var text(x : @Character) = text (string x);
@var text(x : @Boolean) = text (string x);
@var text(x : Text) = x;

0
